// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/invoice.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing price for invoice in notional fiat value.
type InvoiceRequest struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvoiceRequest) Reset()         { *m = InvoiceRequest{} }
func (m *InvoiceRequest) String() string { return proto.CompactTextString(m) }
func (*InvoiceRequest) ProtoMessage()    {}
func (*InvoiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_invoice_555dd56b0427b90a, []int{0}
}
func (m *InvoiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceRequest.Unmarshal(m, b)
}
func (m *InvoiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceRequest.Marshal(b, m, deterministic)
}
func (dst *InvoiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceRequest.Merge(dst, src)
}
func (m *InvoiceRequest) XXX_Size() int {
	return xxx_messageInfo_InvoiceRequest.Size(m)
}
func (m *InvoiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceRequest proto.InternalMessageInfo

func (m *InvoiceRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// The request message containing an invoice id to check status for. // Invoice id will be bitcoin address.
type InvoiceCheckRequest struct {
	InvoiceId            string   `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvoiceCheckRequest) Reset()         { *m = InvoiceCheckRequest{} }
func (m *InvoiceCheckRequest) String() string { return proto.CompactTextString(m) }
func (*InvoiceCheckRequest) ProtoMessage()    {}
func (*InvoiceCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_invoice_555dd56b0427b90a, []int{1}
}
func (m *InvoiceCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceCheckRequest.Unmarshal(m, b)
}
func (m *InvoiceCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceCheckRequest.Marshal(b, m, deterministic)
}
func (dst *InvoiceCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceCheckRequest.Merge(dst, src)
}
func (m *InvoiceCheckRequest) XXX_Size() int {
	return xxx_messageInfo_InvoiceCheckRequest.Size(m)
}
func (m *InvoiceCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceCheckRequest proto.InternalMessageInfo

func (m *InvoiceCheckRequest) GetInvoiceId() string {
	if m != nil {
		return m.InvoiceId
	}
	return ""
}

// The request message containing an invoice id to check status for. // Invoice id will be bitcoin address.
type InvoiceGetRequest struct {
	InvoiceId            string   `protobuf:"bytes,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvoiceGetRequest) Reset()         { *m = InvoiceGetRequest{} }
func (m *InvoiceGetRequest) String() string { return proto.CompactTextString(m) }
func (*InvoiceGetRequest) ProtoMessage()    {}
func (*InvoiceGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_invoice_555dd56b0427b90a, []int{2}
}
func (m *InvoiceGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceGetRequest.Unmarshal(m, b)
}
func (m *InvoiceGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceGetRequest.Marshal(b, m, deterministic)
}
func (dst *InvoiceGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceGetRequest.Merge(dst, src)
}
func (m *InvoiceGetRequest) XXX_Size() int {
	return xxx_messageInfo_InvoiceGetRequest.Size(m)
}
func (m *InvoiceGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceGetRequest proto.InternalMessageInfo

func (m *InvoiceGetRequest) GetInvoiceId() string {
	if m != nil {
		return m.InvoiceId
	}
	return ""
}

// The response message containing notional bitcoin value, notional fiat value, and expiry in unix timestamp.
type InvoiceResponse struct {
	FiatValue            int32    `protobuf:"varint,1,opt,name=fiatValue,proto3" json:"fiatValue,omitempty"`
	DigitalValue         int64    `protobuf:"varint,2,opt,name=digitalValue,proto3" json:"digitalValue,omitempty"`
	Expiry               int64    `protobuf:"varint,3,opt,name=expiry,proto3" json:"expiry,omitempty"`
	InvoiceId            string   `protobuf:"bytes,4,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvoiceResponse) Reset()         { *m = InvoiceResponse{} }
func (m *InvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*InvoiceResponse) ProtoMessage()    {}
func (*InvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_invoice_555dd56b0427b90a, []int{3}
}
func (m *InvoiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceResponse.Unmarshal(m, b)
}
func (m *InvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceResponse.Marshal(b, m, deterministic)
}
func (dst *InvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceResponse.Merge(dst, src)
}
func (m *InvoiceResponse) XXX_Size() int {
	return xxx_messageInfo_InvoiceResponse.Size(m)
}
func (m *InvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceResponse proto.InternalMessageInfo

func (m *InvoiceResponse) GetFiatValue() int32 {
	if m != nil {
		return m.FiatValue
	}
	return 0
}

func (m *InvoiceResponse) GetDigitalValue() int64 {
	if m != nil {
		return m.DigitalValue
	}
	return 0
}

func (m *InvoiceResponse) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *InvoiceResponse) GetInvoiceId() string {
	if m != nil {
		return m.InvoiceId
	}
	return ""
}

// The response message containing status of invoice. Valid options are 'expired' 'partially_paid' 'paid' 'unpaid' //@TODO - 'overpaid'
type InvoiceCheckResponse struct {
	Status                string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	DigitalValueRemaining int64    `protobuf:"varint,2,opt,name=digitalValueRemaining,proto3" json:"digitalValueRemaining,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *InvoiceCheckResponse) Reset()         { *m = InvoiceCheckResponse{} }
func (m *InvoiceCheckResponse) String() string { return proto.CompactTextString(m) }
func (*InvoiceCheckResponse) ProtoMessage()    {}
func (*InvoiceCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_invoice_555dd56b0427b90a, []int{4}
}
func (m *InvoiceCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceCheckResponse.Unmarshal(m, b)
}
func (m *InvoiceCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceCheckResponse.Marshal(b, m, deterministic)
}
func (dst *InvoiceCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceCheckResponse.Merge(dst, src)
}
func (m *InvoiceCheckResponse) XXX_Size() int {
	return xxx_messageInfo_InvoiceCheckResponse.Size(m)
}
func (m *InvoiceCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceCheckResponse proto.InternalMessageInfo

func (m *InvoiceCheckResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *InvoiceCheckResponse) GetDigitalValueRemaining() int64 {
	if m != nil {
		return m.DigitalValueRemaining
	}
	return 0
}

func init() {
	proto.RegisterType((*InvoiceRequest)(nil), "protobuf.InvoiceRequest")
	proto.RegisterType((*InvoiceCheckRequest)(nil), "protobuf.InvoiceCheckRequest")
	proto.RegisterType((*InvoiceGetRequest)(nil), "protobuf.InvoiceGetRequest")
	proto.RegisterType((*InvoiceResponse)(nil), "protobuf.InvoiceResponse")
	proto.RegisterType((*InvoiceCheckResponse)(nil), "protobuf.InvoiceCheckResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InvoiceClient is the client API for Invoice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InvoiceClient interface {
	// Returns an invoice.
	CreateInvoice(ctx context.Context, in *InvoiceRequest, opts ...grpc.CallOption) (*InvoiceResponse, error)
	// Returns invoice for a particular invoice id.
	GetInvoice(ctx context.Context, in *InvoiceGetRequest, opts ...grpc.CallOption) (*InvoiceResponse, error)
	// Returns status on a particular invoice.
	CheckInvoice(ctx context.Context, in *InvoiceCheckRequest, opts ...grpc.CallOption) (*InvoiceCheckResponse, error)
}

type invoiceClient struct {
	cc *grpc.ClientConn
}

func NewInvoiceClient(cc *grpc.ClientConn) InvoiceClient {
	return &invoiceClient{cc}
}

func (c *invoiceClient) CreateInvoice(ctx context.Context, in *InvoiceRequest, opts ...grpc.CallOption) (*InvoiceResponse, error) {
	out := new(InvoiceResponse)
	err := c.cc.Invoke(ctx, "/protobuf.Invoice/CreateInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoiceClient) GetInvoice(ctx context.Context, in *InvoiceGetRequest, opts ...grpc.CallOption) (*InvoiceResponse, error) {
	out := new(InvoiceResponse)
	err := c.cc.Invoke(ctx, "/protobuf.Invoice/GetInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invoiceClient) CheckInvoice(ctx context.Context, in *InvoiceCheckRequest, opts ...grpc.CallOption) (*InvoiceCheckResponse, error) {
	out := new(InvoiceCheckResponse)
	err := c.cc.Invoke(ctx, "/protobuf.Invoice/CheckInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InvoiceServer is the server API for Invoice service.
type InvoiceServer interface {
	// Returns an invoice.
	CreateInvoice(context.Context, *InvoiceRequest) (*InvoiceResponse, error)
	// Returns invoice for a particular invoice id.
	GetInvoice(context.Context, *InvoiceGetRequest) (*InvoiceResponse, error)
	// Returns status on a particular invoice.
	CheckInvoice(context.Context, *InvoiceCheckRequest) (*InvoiceCheckResponse, error)
}

func RegisterInvoiceServer(s *grpc.Server, srv InvoiceServer) {
	s.RegisterService(&_Invoice_serviceDesc, srv)
}

func _Invoice_CreateInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceServer).CreateInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Invoice/CreateInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceServer).CreateInvoice(ctx, req.(*InvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Invoice_GetInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvoiceGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceServer).GetInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Invoice/GetInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceServer).GetInvoice(ctx, req.(*InvoiceGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Invoice_CheckInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvoiceCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvoiceServer).CheckInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Invoice/CheckInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvoiceServer).CheckInvoice(ctx, req.(*InvoiceCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Invoice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Invoice",
	HandlerType: (*InvoiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateInvoice",
			Handler:    _Invoice_CreateInvoice_Handler,
		},
		{
			MethodName: "GetInvoice",
			Handler:    _Invoice_GetInvoice_Handler,
		},
		{
			MethodName: "CheckInvoice",
			Handler:    _Invoice_CheckInvoice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/invoice.proto",
}

func init() { proto.RegisterFile("protobuf/invoice.proto", fileDescriptor_invoice_555dd56b0427b90a) }

var fileDescriptor_invoice_555dd56b0427b90a = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0xad, 0x08, 0xda, 0x09, 0x6a, 0x5c, 0xb1, 0xa9, 0x28, 0x86, 0xf4, 0x60, 0x38, 0xd5,
	0x04, 0x79, 0x03, 0x12, 0x08, 0x27, 0x93, 0x3d, 0x78, 0x35, 0x0b, 0x1d, 0x70, 0x23, 0xb6, 0xb5,
	0xbb, 0x25, 0xfa, 0x0a, 0x3e, 0xaa, 0x4f, 0x61, 0xb2, 0x9d, 0x95, 0x16, 0xd0, 0x78, 0x9c, 0xff,
	0xff, 0xe7, 0xef, 0xb7, 0x99, 0x82, 0x97, 0x66, 0x89, 0x4e, 0xa6, 0xf9, 0xfc, 0x4e, 0xc6, 0xab,
	0x44, 0xce, 0x30, 0x34, 0x02, 0x3b, 0xb2, 0x7a, 0x70, 0x0b, 0x27, 0x93, 0xc2, 0xe2, 0xf8, 0x96,
	0xa3, 0xd2, 0xac, 0x05, 0xf5, 0x95, 0x58, 0xe6, 0xe8, 0x3b, 0x5d, 0xa7, 0x57, 0xe7, 0xc5, 0x10,
	0x0c, 0xe0, 0x9c, 0x72, 0xc3, 0x67, 0x9c, 0xbd, 0xd8, 0x70, 0x07, 0x80, 0x9a, 0x9f, 0x64, 0x64,
	0x36, 0x5c, 0xee, 0x92, 0x32, 0x89, 0x82, 0x3e, 0x9c, 0xd1, 0xd6, 0x18, 0xf5, 0x3f, 0x77, 0x3e,
	0x1d, 0x38, 0xfd, 0x41, 0x52, 0x69, 0x12, 0x2b, 0x64, 0xd7, 0xe0, 0xce, 0xa5, 0xd0, 0x8f, 0x25,
	0xae, 0xb5, 0xc0, 0x02, 0x68, 0x46, 0x72, 0x21, 0xb5, 0x58, 0x16, 0x81, 0xfd, 0xae, 0xd3, 0xab,
	0xf1, 0x8a, 0xc6, 0x3c, 0x68, 0xe0, 0x7b, 0x2a, 0xb3, 0x0f, 0xbf, 0x66, 0x5c, 0x9a, 0x36, 0x60,
	0x0e, 0x36, 0x61, 0x22, 0x68, 0x55, 0x9f, 0x4d, 0x40, 0x1e, 0x34, 0x94, 0x16, 0x3a, 0x57, 0xc4,
	0x4f, 0x13, 0x1b, 0xc0, 0x45, 0xf9, 0xb3, 0x1c, 0x5f, 0x85, 0x8c, 0x65, 0xbc, 0x20, 0xa6, 0xdd,
	0x66, 0xff, 0xcb, 0x81, 0x43, 0xfa, 0x0c, 0x1b, 0xc1, 0xf1, 0x30, 0x43, 0xa1, 0xd1, 0x0a, 0x7e,
	0x68, 0x8f, 0x15, 0x56, 0x2f, 0xd5, 0xbe, 0xdc, 0xe1, 0x14, 0x7c, 0xc1, 0x1e, 0x1b, 0x01, 0x8c,
	0x51, 0xdb, 0x92, 0xab, 0xad, 0xe8, 0xfa, 0x20, 0x7f, 0xf7, 0x3c, 0x40, 0xd3, 0x3c, 0xdd, 0x36,
	0x75, 0xb6, 0xc2, 0xe5, 0x1f, 0xa2, 0x7d, 0xf3, 0x9b, 0x6d, 0x0b, 0xa7, 0x0d, 0x13, 0xb8, 0xff,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0x65, 0xf8, 0x69, 0x96, 0x9c, 0x02, 0x00, 0x00,
}
